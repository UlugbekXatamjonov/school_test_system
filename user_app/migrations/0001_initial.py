# Generated by Django 4.1.7 on 2023-03-31 06:15

import autoslug.fields
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("test_app", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="first_name", unique=True
                    ),
                ),
                ("age", models.PositiveIntegerField(default=5, verbose_name="yosh")),
                (
                    "gender",
                    models.CharField(
                        choices=[("man", "Man"), ("woman", "Woman")],
                        default="man",
                        max_length=50,
                        verbose_name="jins",
                    ),
                ),
                ("state", models.PositiveIntegerField(default=1, verbose_name="sinf")),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        default="C:/Users/xatam/OneDrive/Pictures/Saved_Pictures/default_person_picture(2).png",
                        null=True,
                        upload_to="user_photo",
                        verbose_name="rasm",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="email"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978",
                                regex="^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$",
                            )
                        ],
                        verbose_name="shaxsiy raqam",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Faol"),
                            ("deactive", "Faol emas"),
                            ("delate", "O'chirish"),
                        ],
                        default="active",
                        max_length=30,
                        verbose_name="holati",
                    ),
                ),
                (
                    "father_email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, verbose_name="email"
                    ),
                ),
                (
                    "father_number",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Telefon raqamingiz 9 bilan boshlanishi va 12 belgidan oshmasligi lozim. Masalan: 998334568978",
                                regex="^[\\+]?[9]{2}[8]?[0-9]{2}?[0-9]{3}?[0-9]{2}?[0-9]{2}$",
                            )
                        ],
                        verbose_name="ota-ona raqami",
                    ),
                ),
                (
                    "father_password",
                    models.CharField(
                        blank=True,
                        max_length=30,
                        null=True,
                        verbose_name="ota-ona paroli",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="yaratilgan vaqti"
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "student_tests",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student_tests",
                        to="test_app.sub_category",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "O'quvchi",
                "verbose_name_plural": "O'quvchilar",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ball", models.PositiveIntegerField(default=0, verbose_name="ball")),
                (
                    "tashxis",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="tashxis"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result_category",
                        to="test_app.category",
                        verbose_name="categoriya",
                    ),
                ),
                (
                    "subcategory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result_subcategory",
                        to="test_app.sub_category",
                        verbose_name="kichik kategoriya",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="test_results",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="O'quvchi",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test natijasi",
                "verbose_name_plural": "Test natijalari",
                "ordering": ("-created_at",),
            },
        ),
    ]
